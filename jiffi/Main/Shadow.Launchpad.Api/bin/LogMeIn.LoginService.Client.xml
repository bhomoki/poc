<?xml version="1.0"?>
<doc>
  <assembly>
    <name>LogMeIn.LoginService.Client</name>
  </assembly>
  <members>
    <member name="P:LogMeIn.LoginService.Client.LoginService.LoginServiceBaseUrl">
      <summary>
            Gets the Common Login Service base url.
            </summary>
    </member>
    <member name="T:LogMeIn.Infrastructure.ErrorLogging.ServiceModel.ErrorTicketDataContract">
      <summary>
            Data contract for error ticket ID.
            </summary>
    </member>
    <member name="P:LogMeIn.Infrastructure.ErrorLogging.ServiceModel.ErrorTicketDataContract.TicketId">
      <summary>
            Gets the ticket identifier of the error.
            </summary>
    </member>
    <member name="T:LogMeIn.LoginService.Client.WS.ServiceContractException">
      <summary>
            The exception that is thrown when one of the arguments provided to a WCF service method is not valid.
            These exceptions will not be logged.
            </summary>
    </member>
    <member name="P:LogMeIn.LoginService.Client.WS.UserData.IdentityProviderUserId">
      <summary>
            This value comes from the url as UserID.
            </summary>
    </member>
    <member name="P:LogMeIn.LoginService.Client.WS.UserData.IdentityProviderUserDbId">
      <summary>
            The DbId of the MAH user associated with the Identity provider.
            </summary>
    </member>
    <member name="M:LogMeIn.LoginService.Client.UrlUtility.AddParameter(System.String,System.String,System.String)">
      <summary>
            Adds a parameter (and value) to an Url. Checks if it has to add "?" or "&amp;"
            </summary>
      <param name="url">Original url</param>
      <param name="name">Parameter to add</param>
      <param name="value">Value to add</param>
      <returns>Url</returns>
      <requires description="url" exception="T:System.ArgumentNullException" csharp="url != null" vb="url &lt;&gt; Nothing">url != null</requires>
      <exception cref="T:System.ArgumentNullException">url == null</exception>
      <requires description="name" exception="T:System.ArgumentNullException" csharp="name != null" vb="name &lt;&gt; Nothing">name != null</requires>
      <exception cref="T:System.ArgumentNullException">name == null</exception>
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.UserState.Refresh(System.Boolean)">
      <summary>
            Checks if user is still logged in to LoginService. Maintains sliding expiration for the session.
            </summary>
    </member>
    <member name="M:LogMeIn.LoginService.Client.UserState.GetRefreshAction(System.Boolean,System.DateTime,System.DateTime,System.Boolean)">
      <summary>
            Based on the time elapsed since the last refresh, decide if we can skip refreshing or do an async or sync refresh
            </summary>
      <returns />
    </member>
    <member name="M:LogMeIn.LoginService.Client.UserState.RefreshSessionImpl(System.Boolean,System.Boolean)">
      <summary>
            Checks if the common login session data is still in the AppFabric cache and extend the timeout for it.
            </summary>
      <param name="blocking" />
      <param name="blockingRefresh" />
      <requires description="When blockingRefresh is set to true, blocking must be also true." exception="T:System.ArgumentException" csharp="blockingRefresh ⇒ blocking" vb="blockingRefresh Implies blocking">!blockingRefresh || blocking</requires>
      <exception cref="T:System.ArgumentException">blockingRefresh ? !blocking : !true</exception>
    </member>
    <member name="F:LogMeIn.LoginService.Client.UserState.RefreshAction.Skip">
      <summary>
            No need to check if the common login session data is still in the AppFabric for this session
            </summary>
    </member>
    <member name="F:LogMeIn.LoginService.Client.UserState.RefreshAction.NeedNonBlockingRefresh">
      <summary>
            We will need to check if the common login session data is still in the AppFabric for this session, but don't need to wait for the results
            </summary>
    </member>
    <member name="F:LogMeIn.LoginService.Client.UserState.RefreshAction.NeedBlockingRefresh">
      <summary>
            We will need to check if the common login session data is still in the AppFabric for this session
            and we need to wait for the results because there was no check recently
            </summary>
    </member>
    <member name="P:LogMeIn.LoginService.Client.Configuration.CrossDomainServiceUrl">
      <summary>
            Gets the URL of the cross-domain webservice on the CLS site.
            </summary>
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="T:LogMeIn.LoginService.Client.UserStateManager">
      <summary>
            Class responsibe for keeping the common login session state alive in AppFabric.
            </summary>
    </member>
    <member name="M:LogMeIn.LoginService.Client.UserStateManager.RefreshUserState(System.String,System.Boolean,LogMeIn.LoginService.Client.LocalCacheManager,System.TimeSpan@)">
      <summary>
            Keeps alive the common login session in AppFabric and store the loginSessionId and the user data version for this request.
            </summary>
      <param name="loginSessionId">Id of the common login session</param>
      <param name="blockingRefresh" />
      <param name="cacheManager" />
      <param name="sessionTimeout" />
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
      <requires description="cacheManager" exception="T:System.ArgumentNullException" csharp="cacheManager != null" vb="cacheManager &lt;&gt; Nothing">cacheManager != null</requires>
      <exception cref="T:System.ArgumentNullException">cacheManager == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.User.InvalidateUserState(System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.User.GetUser(System.String,System.Boolean)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="P:LogMeIn.LoginService.Client.CheckedHttpContext.Current">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.GetUserData(LogMeIn.LoginService.Client.WS.ClientSite,System.String)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.Login(System.String,System.String,System.String,System.String,System.String,System.String@)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="clusterId != null" vb="clusterId &lt;&gt; Nothing">clusterId != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">clusterId == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="remoteIp != null" vb="remoteIp &lt;&gt; Nothing">remoteIp != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">remoteIp == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="(email != default(string) &amp;&amp; password != null) != autoLoginTicket != null" vb="(email &lt;&gt; Nothing AndAlso password &lt;&gt; Nothing) &lt;&gt; autoLoginTicket &lt;&gt; Nothing">(email != default(string) &amp;&amp; password != null) != autoLoginTicket != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">(email != default(string) &amp;&amp; password != null) == autoLoginTicket != null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.LoginUsingOneTimeLoginTicket(System.String,System.String,System.String,System.String@)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="clusterId != null" vb="clusterId &lt;&gt; Nothing">clusterId != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">clusterId == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="oneTimeLoginTicket != null" vb="oneTimeLoginTicket &lt;&gt; Nothing">oneTimeLoginTicket != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">oneTimeLoginTicket == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="remoteIp != null" vb="remoteIp &lt;&gt; Nothing">remoteIp != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">remoteIp == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.Logout(LogMeIn.LoginService.Client.WS.ClientSite,System.String)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.GetOneTimeLoginTicket(LogMeIn.LoginService.Client.WS.ClientSite,System.String)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.DeleteOneTimeLoginTicket(System.String)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="oneTimeLoginTicket != null" vb="oneTimeLoginTicket &lt;&gt; Nothing">oneTimeLoginTicket != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">oneTimeLoginTicket == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.GetAutoLoginTicket(LogMeIn.LoginService.Client.WS.ClientSite,System.String)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.SetAccountInfo(LogMeIn.LoginService.Client.WS.ClientSite,System.String,System.String,System.String)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">loginSessionId == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="!IsNullOrWhiteSpace(firstName)" vb="Not IsNullOrWhiteSpace(firstName)">!string.IsNullOrWhiteSpace(firstName)</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">string.IsNullOrWhiteSpace(firstName)</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="firstName.Length &lt;= 90" vb="firstName.Length &lt;= 90">firstName.Length &lt;= 90</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">firstName.Length &gt; 90</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="!IsNullOrWhiteSpace(lastName)" vb="Not IsNullOrWhiteSpace(lastName)">!string.IsNullOrWhiteSpace(lastName)</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">string.IsNullOrWhiteSpace(lastName)</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="lastName.Length &lt;= 90" vb="lastName.Length &lt;= 90">lastName.Length &lt;= 90</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">lastName.Length &gt; 90</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.ConfirmPassword(System.Byte,System.Int64,System.String)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="password != null" vb="password &lt;&gt; Nothing">password != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">password == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.SetUserLanguage(LogMeIn.LoginService.Client.WS.ClientSite,System.String,System.String)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">loginSessionId == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="language != null" vb="language &lt;&gt; Nothing">language != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">language == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="language.Length == 5" vb="language.Length = 5">language.Length == 5</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">language.Length != 5</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.Register(System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Boolean})">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="loginContext != null" vb="loginContext &lt;&gt; Nothing">loginContext != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">loginContext == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="email != null" vb="email &lt;&gt; Nothing">email != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">email == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="password != null" vb="password &lt;&gt; Nothing">password != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">password == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="password.Length &gt;= 5 &amp;&amp; password.Length &lt; 255" vb="password.Length &gt;= 5 AndAlso password.Length &lt; 255">password.Length &gt;= 5 &amp;&amp; password.Length &lt; 255</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">password.Length &lt; 5 ? !false : password.Length &gt;= 255</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="remoteIp != null" vb="remoteIp &lt;&gt; Nothing">remoteIp != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">remoteIp == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.SendForgotPasswordEmail(System.String,System.String,System.String)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="loginContext != null" vb="loginContext &lt;&gt; Nothing">loginContext != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">loginContext == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="email != null" vb="email &lt;&gt; Nothing">email != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">email == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="remoteIp != null" vb="remoteIp &lt;&gt; Nothing">remoteIp != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">remoteIp == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.Encrypt(System.Byte,System.Int64,System.Byte[],System.Byte[]@,System.Nullable{System.Guid}@)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="plainData != null" vb="plainData &lt;&gt; Nothing">plainData != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">plainData == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="plainData.Length == 32" vb="plainData.Length = 32">plainData.Length == 32</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">plainData.Length != 32</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.Decrypt(System.Byte,System.Int64,System.String,System.Byte[],System.Byte[]@)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="password != null" vb="password &lt;&gt; Nothing">password != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">password == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="encryptedData != null" vb="encryptedData &lt;&gt; Nothing">encryptedData != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">encryptedData == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.GetRecoveryKey(System.Byte,System.Int64,System.String,System.String@)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="password != null" vb="password &lt;&gt; Nothing">password != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">password == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.EnsureAccountKeys(LogMeIn.LoginService.Client.WS.ClientSite,System.String,System.String)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">loginSessionId == null</exception>
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="password != null" vb="password &lt;&gt; Nothing">password != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">password == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.GetAccountKeysVersion(LogMeIn.LoginService.Client.WS.ClientSite,System.String,System.Nullable{System.Guid}@)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.IsUserActivated(LogMeIn.LoginService.Client.WS.ClientSite,System.String)">
      <requires exception="T:LogMeIn.LoginService.Client.WS.ServiceContractException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:LogMeIn.LoginService.Client.WS.ServiceContractException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.WS.ILoginService.GetDefaultClusterId">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="P:LogMeIn.LoginService.Client.Configuration.LoginServiceEndpointUrl">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="P:LogMeIn.LoginService.Client.LoginServiceConfigurationSection.LoginServiceWs">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="P:LogMeIn.LoginService.Client.LoginServiceConfigurationSection.Client">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.EnsureNotNull(System.Collections.Specialized.NameValueCollection,System.String)">
      <requires description="queryString" exception="T:System.ArgumentNullException" csharp="queryString != null" vb="queryString &lt;&gt; Nothing">queryString != null</requires>
      <exception cref="T:System.ArgumentNullException">queryString == null</exception>
      <requires description="queryStringKey" exception="T:System.ArgumentNullException" csharp="queryStringKey != null" vb="queryStringKey &lt;&gt; Nothing">queryStringKey != null</requires>
      <exception cref="T:System.ArgumentNullException">queryStringKey == null</exception>
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.TryParseCultureInfo(System.String,System.Globalization.CultureInfo@)">
      <ensures csharp="result ⇒ result != null" vb="result Implies result &lt;&gt; Nothing">!result || result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetLoginPageUrl(System.String,System.Boolean,System.String)">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetEnsureTfaPageUrl">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetLoginOrRegisterPageUrl(System.String)">
      <requires description="email" exception="T:System.ArgumentNullException" csharp="email != null" vb="email &lt;&gt; Nothing">email != null</requires>
      <exception cref="T:System.ArgumentNullException">email == null</exception>
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetRegisterPageUrl(System.String)">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetTryLoginUserServiceEndPoint(System.String)">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetLogoutPageUrl">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetLogoutAndLoginPageUrl(System.Boolean)">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetConfirmPasswordPageUrl">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetChangePasswordPageUrl">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetAccountVerifyPageUrl">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetSamlLoginRedirectUrl">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetAccountSettingsPageUrl">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetEnsureAccountKeysPageUrl">
      <requires description="Cannot ensure account keys when NeedAccountKeys is not true." exception="T:System.InvalidOperationException" csharp="this.NeedAccountKeys" vb="Me.NeedAccountKeys">this.NeedAccountKeys</requires>
      <exception cref="T:System.InvalidOperationException">!this.NeedAccountKeys</exception>
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetAuditSettingsPageUrl">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetForgotPasswordPageUrl(System.String)">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetConfirmationTicketPageUrl(System.String)">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetForgotPasswordTicketPageUrl(System.String)">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetBackOfficeLoginPageUrl(System.String,System.String)">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.GetPageUrl(System.String,System.String)">
      <requires description="pageName" exception="T:System.ArgumentNullException" csharp="pageName != null" vb="pageName &lt;&gt; Nothing">pageName != null</requires>
      <exception cref="T:System.ArgumentNullException">pageName == null</exception>
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.AddToUrl(System.String)">
      <requires description="url" exception="T:System.ArgumentNullException" csharp="url != null" vb="url &lt;&gt; Nothing">url != null</requires>
      <exception cref="T:System.ArgumentNullException">url == null</exception>
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginContext.ToQueryString">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="P:LogMeIn.LoginService.Client.LoginContext.ClusterId">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
      <setter>
        <requires description="value" exception="T:System.ArgumentNullException" csharp="value != null" vb="value &lt;&gt; Nothing">value != null</requires>
      </setter>
      <exception cref="T:System.ArgumentNullException">value == null</exception>
    </member>
    <member name="P:LogMeIn.LoginService.Client.LoginContext.ReturnUrl">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
      <setter>
        <requires description="value" exception="T:System.ArgumentNullException" csharp="value != null" vb="value &lt;&gt; Nothing">value != null</requires>
      </setter>
      <exception cref="T:System.ArgumentNullException">value == null</exception>
    </member>
    <member name="P:LogMeIn.LoginService.Client.LoginContext.CultureInfo">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
      <setter>
        <requires description="value" exception="T:System.ArgumentNullException" csharp="value != null" vb="value &lt;&gt; Nothing">value != null</requires>
      </setter>
      <exception cref="T:System.ArgumentNullException">value == null</exception>
    </member>
    <member name="P:LogMeIn.LoginService.Client.LoginContext.RegisterType">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
      <setter>
        <requires description="value" exception="T:System.ArgumentNullException" csharp="value != null" vb="value &lt;&gt; Nothing">value != null</requires>
      </setter>
      <exception cref="T:System.ArgumentNullException">value == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LocalCacheManager.GetUserState(System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LocalCacheManager.AddUserState(System.String,LogMeIn.LoginService.Client.UserState,System.TimeSpan)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
      <requires description="state" exception="T:System.ArgumentNullException" csharp="state != null" vb="state &lt;&gt; Nothing">state != null</requires>
      <exception cref="T:System.ArgumentNullException">state == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LocalCacheManager.RemoveUserState(System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LocalCacheManager.GetUser(System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LocalCacheManager.InsertUser(System.String,LogMeIn.LoginService.Client.User,System.TimeSpan)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="user != null" vb="user &lt;&gt; Nothing">user != null</requires>
      <exception cref="T:System.ArgumentNullException">user == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LocalCacheManager.RemoveUser(System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LocalCacheManager.GetHttpRuntimeCache">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="P:LogMeIn.LoginService.Client.LoginServiceWs.BaseUrl">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.GetChannelFactory">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.CreateChannel">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.GetUserData(System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.RaiseAsyncRefreshError(System.Exception)">
      <requires description="exception" exception="T:System.ArgumentNullException" csharp="exception != null" vb="exception &lt;&gt; Nothing">exception != null</requires>
      <exception cref="T:System.ArgumentNullException">exception == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.GetUser(System.String,System.Boolean)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.Login(System.String,System.String,System.String,System.String,System.String@)">
      <requires description="remoteIp" exception="T:System.ArgumentNullException" csharp="remoteIp != null" vb="remoteIp &lt;&gt; Nothing">remoteIp != null</requires>
      <exception cref="T:System.ArgumentNullException">remoteIp == null</exception>
      <requires description="Either email and password or autologinticket must not be null" exception="T:System.ArgumentException" csharp="(email != default(string) &amp;&amp; password != null) != autoLoginTicket != null" vb="(email &lt;&gt; Nothing AndAlso password &lt;&gt; Nothing) &lt;&gt; autoLoginTicket &lt;&gt; Nothing">(email != default(string) &amp;&amp; password != null) != autoLoginTicket != null</requires>
      <exception cref="T:System.ArgumentException">(email != default(string) &amp;&amp; password != null) == autoLoginTicket != null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.LoginUsingOneTimeLoginTicket(System.String,System.String,System.String@)">
      <requires description="oneTimeLoginTicket" exception="T:System.ArgumentNullException" csharp="oneTimeLoginTicket != null" vb="oneTimeLoginTicket &lt;&gt; Nothing">oneTimeLoginTicket != null</requires>
      <exception cref="T:System.ArgumentNullException">oneTimeLoginTicket == null</exception>
      <requires description="remoteIp" exception="T:System.ArgumentNullException" csharp="remoteIp != null" vb="remoteIp &lt;&gt; Nothing">remoteIp != null</requires>
      <exception cref="T:System.ArgumentNullException">remoteIp == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.Logout(System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.GetOneTimeLoginTicket(System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.DeleteOneTimeLoginTicket(System.String)">
      <requires description="oneTimeLoginTicket" exception="T:System.ArgumentNullException" csharp="oneTimeLoginTicket != null" vb="oneTimeLoginTicket &lt;&gt; Nothing">oneTimeLoginTicket != null</requires>
      <exception cref="T:System.ArgumentNullException">oneTimeLoginTicket == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.GetAutoLoginTicket(System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.SetAccountInfo(System.String,System.String,System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
      <requires description="firstName" exception="T:System.ArgumentException" csharp="!IsNullOrWhiteSpace(firstName)" vb="Not IsNullOrWhiteSpace(firstName)">!string.IsNullOrWhiteSpace(firstName)</requires>
      <exception cref="T:System.ArgumentException">string.IsNullOrWhiteSpace(firstName)</exception>
      <requires description="firstName max length is 90" exception="T:System.ArgumentException" csharp="firstName.Length &lt;= 90" vb="firstName.Length &lt;= 90">firstName.Length &lt;= 90</requires>
      <exception cref="T:System.ArgumentException">firstName.Length &gt; 90</exception>
      <requires description="lastName" exception="T:System.ArgumentException" csharp="!IsNullOrWhiteSpace(lastName)" vb="Not IsNullOrWhiteSpace(lastName)">!string.IsNullOrWhiteSpace(lastName)</requires>
      <exception cref="T:System.ArgumentException">string.IsNullOrWhiteSpace(lastName)</exception>
      <requires description="lastName max length is 90" exception="T:System.ArgumentException" csharp="lastName.Length &lt;= 90" vb="lastName.Length &lt;= 90">lastName.Length &lt;= 90</requires>
      <exception cref="T:System.ArgumentException">lastName.Length &gt; 90</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.ConfirmPassword(System.Byte,System.Int64,System.String)">
      <requires description="password" exception="T:System.ArgumentNullException" csharp="password != null" vb="password &lt;&gt; Nothing">password != null</requires>
      <exception cref="T:System.ArgumentNullException">password == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.IsUserActivated(LogMeIn.LoginService.Client.User)">
      <requires description="user" exception="T:System.ArgumentNullException" csharp="user != null" vb="user &lt;&gt; Nothing">user != null</requires>
      <exception cref="T:System.ArgumentNullException">user == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.SetUserLanguage(System.String,System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
      <requires description="language" exception="T:System.ArgumentNullException" csharp="language != null" vb="language &lt;&gt; Nothing">language != null</requires>
      <exception cref="T:System.ArgumentNullException">language == null</exception>
      <requires description="5 character language format" exception="T:System.ArgumentException" csharp="language.Length == 5" vb="language.Length = 5">language.Length == 5</requires>
      <exception cref="T:System.ArgumentException">language.Length != 5</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.Register(System.String,System.String,System.Nullable{System.Int32},System.String,System.Boolean)">
      <requires description="email" exception="T:System.ArgumentNullException" csharp="email != null" vb="email &lt;&gt; Nothing">email != null</requires>
      <exception cref="T:System.ArgumentNullException">email == null</exception>
      <requires description="password" exception="T:System.ArgumentNullException" csharp="password != null" vb="password &lt;&gt; Nothing">password != null</requires>
      <exception cref="T:System.ArgumentNullException">password == null</exception>
      <requires description="password length should be between 5 and 255" exception="T:System.ArgumentException" csharp="password.Length &gt;= 5 &amp;&amp; password.Length &lt; 255" vb="password.Length &gt;= 5 AndAlso password.Length &lt; 255">password.Length &gt;= 5 &amp;&amp; password.Length &lt; 255</requires>
      <exception cref="T:System.ArgumentException">password.Length &lt; 5 ? !false : password.Length &gt;= 255</exception>
      <requires description="remoteIp" exception="T:System.ArgumentNullException" csharp="remoteIp != null" vb="remoteIp &lt;&gt; Nothing">remoteIp != null</requires>
      <exception cref="T:System.ArgumentNullException">remoteIp == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.Register(System.String,System.String,System.Nullable{System.Int32},System.String,System.Boolean,System.Boolean)">
      <requires description="email" exception="T:System.ArgumentNullException" csharp="email != null" vb="email &lt;&gt; Nothing">email != null</requires>
      <exception cref="T:System.ArgumentNullException">email == null</exception>
      <requires description="password" exception="T:System.ArgumentNullException" csharp="password != null" vb="password &lt;&gt; Nothing">password != null</requires>
      <exception cref="T:System.ArgumentNullException">password == null</exception>
      <requires description="password length should be between 5 and 255" exception="T:System.ArgumentException" csharp="password.Length &gt;= 5 &amp;&amp; password.Length &lt; 255" vb="password.Length &gt;= 5 AndAlso password.Length &lt; 255">password.Length &gt;= 5 &amp;&amp; password.Length &lt; 255</requires>
      <exception cref="T:System.ArgumentException">password.Length &lt; 5 ? !false : password.Length &gt;= 255</exception>
      <requires description="remoteIp" exception="T:System.ArgumentNullException" csharp="remoteIp != null" vb="remoteIp &lt;&gt; Nothing">remoteIp != null</requires>
      <exception cref="T:System.ArgumentNullException">remoteIp == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.SendForgotPasswordEmail(System.String,System.String)">
      <requires description="email" exception="T:System.ArgumentNullException" csharp="email != null" vb="email &lt;&gt; Nothing">email != null</requires>
      <exception cref="T:System.ArgumentNullException">email == null</exception>
      <requires description="remoteIp" exception="T:System.ArgumentNullException" csharp="remoteIp != null" vb="remoteIp &lt;&gt; Nothing">remoteIp != null</requires>
      <exception cref="T:System.ArgumentNullException">remoteIp == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.GetDefaultClusterId">
      <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.Encrypt(System.Byte,System.Int64,System.Byte[],System.Byte[]@,System.Nullable{System.Guid}@)">
      <requires description="data" exception="T:System.ArgumentNullException" csharp="data != null" vb="data &lt;&gt; Nothing">data != null</requires>
      <exception cref="T:System.ArgumentNullException">data == null</exception>
      <requires description="data must be 32 bytes long" exception="T:System.ArgumentException" csharp="data.Length == 32" vb="data.Length = 32">data.Length == 32</requires>
      <exception cref="T:System.ArgumentException">data.Length != 32</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.Decrypt(System.Byte,System.Int64,System.String,System.Byte[],System.Byte[]@)">
      <requires description="password" exception="T:System.ArgumentNullException" csharp="password != null" vb="password &lt;&gt; Nothing">password != null</requires>
      <exception cref="T:System.ArgumentNullException">password == null</exception>
      <requires description="encryptedData" exception="T:System.ArgumentNullException" csharp="encryptedData != null" vb="encryptedData &lt;&gt; Nothing">encryptedData != null</requires>
      <exception cref="T:System.ArgumentNullException">encryptedData == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.GetRecoveryKey(System.Byte,System.Int64,System.String,System.String@)">
      <requires description="password" exception="T:System.ArgumentNullException" csharp="password != null" vb="password &lt;&gt; Nothing">password != null</requires>
      <exception cref="T:System.ArgumentNullException">password == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.EnsureAccountKeys(System.String,System.String)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
      <requires description="password" exception="T:System.ArgumentNullException" csharp="password != null" vb="password &lt;&gt; Nothing">password != null</requires>
      <exception cref="T:System.ArgumentNullException">password == null</exception>
    </member>
    <member name="M:LogMeIn.LoginService.Client.LoginService.GetAccountKeysVersion(System.String,System.Nullable{System.Guid}@)">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
    </member>
    <member name="P:LogMeIn.LoginService.Client.LoginService.DefaultClusterId">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="M:LogMeIn.LoginService.Client.UserState.#ctor(System.String,System.Action{System.Exception})">
      <requires description="loginSessionId" exception="T:System.ArgumentNullException" csharp="loginSessionId != null" vb="loginSessionId &lt;&gt; Nothing">loginSessionId != null</requires>
      <exception cref="T:System.ArgumentNullException">loginSessionId == null</exception>
      <requires description="asyncRefreshErrorCallback" exception="T:System.ArgumentNullException" csharp="asyncRefreshErrorCallback != null" vb="asyncRefreshErrorCallback &lt;&gt; Nothing">asyncRefreshErrorCallback != null</requires>
      <exception cref="T:System.ArgumentNullException">asyncRefreshErrorCallback == null</exception>
    </member>
    <member name="P:LogMeIn.LoginService.Client.UserState.LoginSessionId">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="P:LogMeIn.LoginService.Client.UserState.AsyncRefreshErrorCallback">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="P:LogMeIn.LoginService.Client.Client.ReturnUrl">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
      </getter>
    </member>
    <member name="P:LogMeIn.LoginService.Client.Client.RegisterType">
      <getter>
        <ensures csharp="result != null" vb="result &lt;&gt; Nothing">result != null</ensures>
        <ensures csharp="result.Length == 1" vb="result.Length = 1">result.Length == 1</ensures>
      </getter>
    </member>
  </members>
</doc>